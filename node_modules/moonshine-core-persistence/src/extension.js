var moonshine = require("moonshine-core")
var settings = moonshine.settings
var logger = moonshine.logFactory()
var mongoose = require("mongoose")
var helpers = require("moonshine-core/helpers")

module.exports.setup = function setupPersistence(cb){
    moonshine.registerService("persistence",{
        models: {},
        schemas: {},
        getSchema: function(name){
            var schemas = moonshine.persistence.schemas;
            if (!schemas[name]) {
                schemas[name] = new mongoose.Schema({})
            }
            return schemas[name];
        },
        Schema: mongoose.Schema,
        native: mongoose
    })
    cb()
}

module.exports.extend = {
    process:helpers.genericLoadModuleFunction("model",logger),
    after: function registerSchemas(cb){
        var schemas = moonshine.persistence.schemas
        try {
            for (var modelName in schemas) {
                var schema = schemas[modelName]
                moonshine.persistence.models[modelName] = mongoose.model(modelName,schema)
            }
            mongoose.connect(settings.PERSISTENCE_CONNECTION,cb);
        } catch (err) {
            cb(err)
        }
    }
}