var assert = require("assert"),
    request = require("superagent")

describe("test api",function(){
    var moonshine = null
    afterEach(function(done){
        Object.keys(require.cache).forEach(function(key){
            delete require.cache[key];
        })
        global.__moonshine_loaded = undefined
        done()
    })
    it("should add api to resources",function(done){
        var moonshine = require("moonshine-core")
        moonshine.runCommand("runserver",[require.resolve("moonshine-core-base")
                ,require.resolve("moonshine-core-logging")
                ,require.resolve("moonshine-core-persistence")
                ,require.resolve("moonshine-core-server")
                ,require.resolve("../")
                ,require.resolve("./_mock_app")])
            .then(function(){
                assert.ok(moonshine.api)
                request.agent().post('http://localhost:' + moonshine.server.httpServer.address().port + "/api/v1/users/")
                    .send({text:"text in model"})
                    .end(function(err,res){
                        if (err) return done(err)
                        moonshine.persistence.models["user"].findOne({text:"text in model"},function(err,dbmodel){
                            if (err)done(err)
                            assert.ok(dbmodel)
                            request.agent().get("http://localhost:" + moonshine.server.httpServer.address().port + "/api/v1/users/" + dbmodel.id + "/")
                                .end(function(err,res){
                                    if (err) done(err)
                                    assert.equal(res.body.text,"text in model")
                                    moonshine.server.shutdown(done)
                                })
                        })
                    })
            })
            .otherwise(done)
    })

})

