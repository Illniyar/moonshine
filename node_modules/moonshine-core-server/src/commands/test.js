var moonshine = require("moonshine-core"),
    settings = moonshine.settings,
    logger = moonshine.logFactory(),
    spawn = require("child_process").spawn,
    when = require("when"),
    path = require("path")

function TestCommand(){

}
TestCommand.prototype.run = function(command,args){
    console.log("running " + command + " tests")
    var deferred = when.defer()
    var env = process.env;
    env.path= process.env.path + ";" +  path.join(process.cwd(),"node_modules",".bin")
    env.MOONSHINE_ENVIRONMENT = [].concat(process.env.MOONSHINE_ENVIRONMENT).concat("TEST")
    if (process.platform == "win32")
        args.unshift("/c",command);
        command = "cmd"
    var spawned = spawn(command,args,{
        cwd: process.cwd(),
        env: env,
        stdio:"inherit"
    })
    spawned.on('exit',function(){
        deferred.resolve()
    })
    spawned.on('error',function(err){
        deferred.reject(err)
    })
    return deferred.promise
}
TestCommand.prototype.checkForScript = function(script) {
    try {
        require.resolve(script)
        return true
    } catch (e){
        if (e.code && e.code == "MODULE_NOT_FOUND" ){
            return false
        }
        throw e
    }
}
TestCommand.prototype.checkForScriptAndRun = function(command,args) {

    try {
        var found = this.checkForScript(command)
        if (found) return this.run(command,args)
        return when.resolve()
    } catch (e){
        return when.reject(e)
    }
}
TestCommand.prototype.runKarma = function(){
    var exists =this.checkForScript("karma")
    if (!exists) return when.resolve()
    console.log("running karma tests")
    var server = require('karma').server
    var deferred = when.defer()
    var config = require("karma/lib/config").parseConfig(require.resolve("./karma.config.js"),{})
    this.configKarma(config)
    server.start(config,function(exitCode){
        if (exitCode != 0) return deferred.reject(new Error("karma exited with errorCode " + exitCode))
        deferred.resolve()
    })
    return deferred.promise
}
TestCommand.prototype.configKarma = function(config){

}
TestCommand.prototype.execute = function(args,cb){
    this.checkForScriptAndRun("mocha",["--harmony-proxies","--recursive","--reporter","Spec","test/**/*.spec.js"])
        .then(this.runKarma.bind(this))
        .then(function(args){
            cb(null,true)
        },cb)
}
module.exports = TestCommand;