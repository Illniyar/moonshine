(function(){
    var moonAngular = angular.module("moon.angular",['restangular']);
    moonAngular.config(["RestangularProvider",function(RestangularProvider){
        RestangularProvider.setRestangularFields({
            id: "_id"
        });
        RestangularProvider.setBaseUrl("/api/v1/");
    }]);
    moonAngular.provider("scriptLoader",function(){
        var self = this;
        this.scriptPrefix = "/js"
        this.disableAutoScriptLoading = false;
        this.scriptLocationResolver = function(stateInfo) {
            return self.scriptPrefix + "/" + stateInfo.name + ".js"
        }
        this.$get = function(){
            return {
                scriptPrefix:self.scriptPrefix,
                scriptLocationResolver: self.scriptLocationResolver,
                disableAutoScriptLoading: self.disableAutoScriptLoading
            }
        }
    })
    moonAngular.run(["$rootScope", "$q","scriptLoader","$injector","$document",
        function($rootScope, $q,scriptLoader,$injector,$document){
            if (scriptLoader.disableAutoScriptLoading) return;
            var modulesAlreadyChecked = {};

            function moduleExists(name){
                try {
                    angular.injector([name])
                } catch (e){
                    if (e.message.indexOf("module '" + name + "' is not available!"))
                        return false;
                    else
                        throw e;
                }
                return true;
            }
            function onRouteChange(event, next){
                var moduleName = next.name;
                if (modulesAlreadyChecked[moduleName] || moduleExists(moduleName)) return;
                modulesAlreadyChecked[moduleName] = true;
                var scripts = next.scripts || [scriptLoader.scriptLocationResolver(next)]
                if (!next.resolve) next.resolve = {}
                scripts.forEach(function(scriptPath){
                    var waitForMe = $q.defer();
                    next.resolve[scriptPath] = function(){return waitForMe.promise}

                    var scriptTag = $document[0].createElement('script')
                    scriptTag.onload = function() {
                        $injector.loadNewModules([moduleName])
                        waitForMe.resolve()
                    };
                    scriptTag.src = scriptPath;
                    document.getElementsByTagName('body')[0].appendChild(scriptTag);
                })
            }

            $rootScope.$on('$stateChangeStart', onRouteChange) //ui-router
            $rootScope.$on('$routeChangeStart', onRouteChange) //standard-router
        }
    ])
})()